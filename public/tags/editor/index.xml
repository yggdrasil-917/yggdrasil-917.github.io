<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Editor on Tempest Engine Dev</title>
    <link>https://yggdrasil-917.github.io/tags/editor/</link>
    <description>Recent content in Editor on Tempest Engine Dev</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Oct 2024 18:36:51 -0700</lastBuildDate>
    <atom:link href="https://yggdrasil-917.github.io/tags/editor/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Poor Man&#39;s Pausepoint</title>
      <link>https://yggdrasil-917.github.io/posts/poor-mans-pausepoint/poor-mans-pausepoint/</link>
      <pubDate>Tue, 29 Oct 2024 18:36:51 -0700</pubDate>
      <guid>https://yggdrasil-917.github.io/posts/poor-mans-pausepoint/poor-mans-pausepoint/</guid>
      <description>If you&amp;rsquo;re familiar with the Jetbrains Rider IDE and have used it for Unity development then you may be aware of a feature they provide called pausepoints. Similar to normal breakpoints but, unlike them, they do not suspend the application nor give you call stack information. Instead it allows the developer to pause the editor when in play mode just like what happens when the user clicks the pause button in the game view.</description>
    </item>
    <item>
      <title>Choosing A Game AI System - Behavior Trees</title>
      <link>https://yggdrasil-917.github.io/posts/behavior-trees/behavior-trees/</link>
      <pubDate>Sat, 12 Oct 2024 14:06:14 -0700</pubDate>
      <guid>https://yggdrasil-917.github.io/posts/behavior-trees/behavior-trees/</guid>
      <description>Behavior Trees Node Types Implementation Authoring BTs Downsides to BTs Once it was time to add an AI system to power the enemy AI for the game being made in Tempest I automatically defaulted to use behavior trees for it. This was mostly because it is what I was most familiar with at the time but wasn&amp;rsquo;t sure if it was the right fit for a tactical RPG game that has various job classes that can be mixed and matched.</description>
    </item>
    <item>
      <title>Tempest Gpu Frame</title>
      <link>https://yggdrasil-917.github.io/posts/tempest-gpu-frame/tempest-gpu-frame/</link>
      <pubDate>Sun, 21 Jul 2024 08:54:06 -0700</pubDate>
      <guid>https://yggdrasil-917.github.io/posts/tempest-gpu-frame/tempest-gpu-frame/</guid>
      <description>Shadows Phase Depth Phase PreLighting Phase Lighting Phase ImGui Phase NVidia NSight Preview This post will go over one of the rendering test scenes and we&amp;rsquo;ll see the steps the Tempest engine takes on the GPU to render a frame. The engine has its own editor separate from the player executable, which is what is shipped to people. The editor does pretty much the same thing the player does plus a few editor only rendering tasks so the scene we will analyze is actually running in the editor.</description>
    </item>
  </channel>
</rss>
